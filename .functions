# Create a new directory and enter it
function mkd() {
    mkdir -p "$@" && cd "$@"
}

# Determine size of a file or total size of a directory
function fs() {
    if du -b /dev/null > /dev/null 2>&1; then
            local arg=-sbh
    else
            local arg=-sh
    fi
    if [[ -n "$@" ]]; then
            du $arg -- "$@" | sort -r
    else
            du $arg .[^.]* * | sort -r
    fi
}

# `o` with no arguments opens current directory, otherwise opens the given location
function o() {
    if [ $# -eq 0 ]; then
            open .
    else
            open "$@"
    fi
}

# Fire up notebook with dev django settings
workbook(){
    echo "settings >> $@"
    python manage.py shell_plus --notebook --settings="$@"
}

# Generic iPython setup
notebook(){
  ipython notebook --profile=cabhishek
}

myip(){
    ipconfig getifaddr en0
}

publicip(){
    curl ipecho.net/plain; echo
}

# Clean up wifi issue
fixwifi(){
    trash /Library/Preferences/SystemConfiguration
}

# List all files with nice color highlighting
function tre() {
    tree -aC -I '.git|.local-cache|.venv|*.pyc|.DS_Store|__pycache__|node_modules|bower_components' --dirsfirst "$@" | less -FRNX;
}

# Go up [n] directories
function up()
{
    local cdir="$(pwd)"
    if [[ "${1}" == "" ]]; then
        cdir="$(dirname "${cdir}")"
    elif ! [[ "${1}" =~ ^[0-9]+$ ]]; then
        echo "Error: argument must be a number"
    elif ! [[ "${1}" -gt "0" ]]; then
        echo "Error: argument must be positive"
    else
        for i in {1..${1}}; do
            local ncdir="$(dirname "${cdir}")"
            if [[ "${cdir}" == "${ncdir}" ]]; then
                break
            else
                cdir="${ncdir}"
            fi
        done
    fi
    cd "${cdir}"
}

# Execute a command in a specific directory
function in() {
    (
        cd ${1} && shift && ${@}
    )
}

# Check if a file contains non-ascii characters
function nonascii() {
    LC_ALL=C grep -n '[^[:print:][:space:]]' ${1}
}
